// DO NOT EDIT
// This file is automatically generated!
// $ smg.shen rtl/SMG/seq.smg
//
// https://github.com/sam-falvo/smg

module Sequencer(
	input 	xt3,
	input 	xt2,
	input 	xt1,
	input 	xt0,
	input [31:0]	ir,
	input 	iack_i,
	input 	ft0,
	input 	rst,
	output 	sx32_en,
	output 	pc_alu,
	output 	xt3_o,
	output 	and_en,
	output 	rsh_en,
	output 	xor_en,
	output 	ltu_en,
	output 	lts_en,
	output 	invB_en,
	output 	cflag_i,
	output 	lsh_en,
	output 	sum_en,
	output 	alub_imm12i,
	output 	alua_rdat,
	output 	rwe_o,
	output 	rdat_pc,
	output 	rdat_alu,
	output 	ra_ird,
	output 	ra_ir1,
	output 	xt2_o,
	output 	xt1_o,
	output 	jammed_o,
	output 	xt0_o,
	output 	ir_idat,
	output 	pc_pcPlus4,
	output 	isiz_2,
	output 	iadr_pc,
	output 	pc_mbvec,
	output 	ft0_o
);
wire  useAlu;
wire  fn3_is_111;
wire  fn3_is_110;
wire  fn3_is_101;
wire  fn3_is_100;
wire  fn3_is_011;
wire  fn3_is_010;
wire  fn3_is_001;
wire  fn3_is_000;
wire  isJalr;
wire  isOpI;
wire R1391 = (|rst) ; 
wire R1392 = ~(|rst) & (|ft0) & ~(|iack_i) ; 
wire R1393 = ~(|rst) & (|ft0) & (|iack_i) ; 
wire R1394 = ~(|rst) & ~(|ft0) & ~(|xt0) & ~(|xt1) & ~(|xt2) & ~(|xt3) ; 
wire R1395 = ( ir[14:12] == 3'b000 ) ; 
wire R1396 = ( ir[14:12] == 3'b001 ) ; 
wire R1397 = ( ir[14:12] == 3'b010 ) ; 
wire R1398 = ( ir[14:12] == 3'b011 ) ; 
wire R1399 = ( ir[14:12] == 3'b100 ) ; 
wire R1400 = ( ir[14:12] == 3'b101 ) ; 
wire R1401 = ( ir[14:12] == 3'b110 ) ; 
wire R1402 = ( ir[14:12] == 3'b111 ) ; 
wire R1403 = ( ir[6:4] == 7'b001 ) & ( ir[2:0] == 3'b011 ) ; 
wire R1404 = ~(|rst) & (|xt0) & (|isOpI) ; 
wire R1405 = ~(|rst) & (|xt1) & (|isOpI) ; 
wire R1406 = ~(|rst) & (|xt2) & (|isOpI) ; 
wire R1407 = (|useAlu) & (|fn3_is_000) ; 
wire R1408 = (|useAlu) & (|fn3_is_001) ; 
wire R1409 = (|useAlu) & (|fn3_is_010) ; 
wire R1410 = (|useAlu) & (|fn3_is_011) ; 
wire R1411 = (|useAlu) & (|fn3_is_100) ; 
wire R1412 = (|useAlu) & (|fn3_is_101) & ~(|ir[30]) ; 
wire R1413 = (|useAlu) & (|fn3_is_101) & (|ir[30]) ; 
wire R1414 = (|useAlu) & (|fn3_is_110) ; 
wire R1415 = (|useAlu) & (|fn3_is_111) ; 
wire R1416 = (|useAlu) & (|ir[3]) ; 
wire R1417 = ( ir[6:0] == 7'b1100111 ) ; 
wire R1418 = ~(|rst) & (|xt0) & (|isJalr) ; 
wire R1419 = ~(|rst) & (|xt1) & (|isJalr) ; 
wire R1420 = ~(|rst) & (|xt2) & (|isJalr) ; 
wire R1421 = ~(|rst) & (|xt3) & (|isJalr) ; 
wire  out1422 = R1391 ? 1 : 0 ; 
wire  out1423 = R1391 ? 1 : 0 ; 
wire  out1424 = R1392 ? 1 : 0 ; 
wire  out1425 = R1392 ? 1 : 0 ; 
wire  out1426 = R1392 ? 1 : 0 ; 
wire  out1427 = R1393 ? 1 : 0 ; 
wire  out1428 = R1393 ? 1 : 0 ; 
wire  out1429 = R1393 ? 1 : 0 ; 
wire  out1430 = R1393 ? 1 : 0 ; 
wire  out1431 = R1393 ? 1 : 0 ; 
wire  out1432 = R1394 ? 1 : 0 ; 
wire  out1433 = R1395 ? 1 : 0 ; 
wire  out1434 = R1396 ? 1 : 0 ; 
wire  out1435 = R1397 ? 1 : 0 ; 
wire  out1436 = R1398 ? 1 : 0 ; 
wire  out1437 = R1399 ? 1 : 0 ; 
wire  out1438 = R1400 ? 1 : 0 ; 
wire  out1439 = R1401 ? 1 : 0 ; 
wire  out1440 = R1402 ? 1 : 0 ; 
wire  out1441 = R1403 ? 1 : 0 ; 
wire  out1442 = R1404 ? 1 : 0 ; 
wire  out1443 = R1404 ? 1 : 0 ; 
wire  out1444 = R1405 ? 1 : 0 ; 
wire  out1445 = R1405 ? 1 : 0 ; 
wire  out1446 = R1405 ? 1 : 0 ; 
wire  out1447 = R1406 ? 1 : 0 ; 
wire  out1448 = R1406 ? 1 : 0 ; 
wire  out1449 = R1406 ? 1 : 0 ; 
wire  out1450 = R1406 ? 1 : 0 ; 
wire  out1451 = R1406 ? 1 : 0 ; 
wire  out1452 = R1407 ? 1 : 0 ; 
wire  out1453 = R1408 ? 1 : 0 ; 
wire  out1454 = R1409 ? 1 : 0 ; 
wire  out1455 = R1409 ? 1 : 0 ; 
wire  out1456 = R1409 ? 1 : 0 ; 
wire  out1457 = R1410 ? 1 : 0 ; 
wire  out1458 = R1410 ? 1 : 0 ; 
wire  out1459 = R1410 ? 1 : 0 ; 
wire  out1460 = R1411 ? 1 : 0 ; 
wire  out1461 = R1412 ? 1 : 0 ; 
wire  out1462 = R1413 ? 1 : 0 ; 
wire  out1463 = R1413 ? 1 : 0 ; 
wire  out1464 = R1414 ? 1 : 0 ; 
wire  out1465 = R1414 ? 1 : 0 ; 
wire  out1466 = R1415 ? 1 : 0 ; 
wire  out1467 = R1416 ? 1 : 0 ; 
wire  out1468 = R1417 ? 1 : 0 ; 
wire  out1469 = R1418 ? 1 : 0 ; 
wire  out1470 = R1418 ? 1 : 0 ; 
wire  out1471 = R1418 ? 1 : 0 ; 
wire  out1472 = R1418 ? 1 : 0 ; 
wire  out1473 = R1419 ? 1 : 0 ; 
wire  out1474 = R1419 ? 1 : 0 ; 
wire  out1475 = R1420 ? 1 : 0 ; 
wire  out1476 = R1420 ? 1 : 0 ; 
wire  out1477 = R1420 ? 1 : 0 ; 
wire  out1478 = R1421 ? 1 : 0 ; 
wire  out1479 = R1421 ? 1 : 0 ; 
wire  out1480 = R1421 ? 1 : 0 ; 
assign invB_en = out1458|out1455;
assign cflag_i = out1463|out1457|out1454;
assign and_en = out1466|out1464;
assign isJalr = out1468;
assign fn3_is_000 = out1433;
assign fn3_is_001 = out1434;
assign fn3_is_010 = out1435;
assign fn3_is_100 = out1437;
assign fn3_is_011 = out1436;
assign fn3_is_101 = out1438;
assign fn3_is_110 = out1439;
assign fn3_is_111 = out1440;
assign iadr_pc = out1427|out1424;
assign useAlu = out1450;
assign ra_ird = out1470|out1447;
assign jammed_o = out1432;
assign pc_alu = out1479;
assign pc_mbvec = out1423;
assign ir_idat = out1430;
assign lsh_en = out1453;
assign rdat_pc = out1471;
assign rsh_en = out1462|out1461;
assign rwe_o = out1472|out1449;
assign alua_rdat = out1476|out1445;
assign alub_imm12i = out1477|out1446;
assign sx32_en = out1467;
assign rdat_alu = out1448;
assign lts_en = out1456;
assign sum_en = out1480|out1452;
assign ltu_en = out1459;
assign xor_en = out1465|out1460;
assign ft0_o = out1478|out1451|out1426|out1422;
assign ra_ir1 = out1474|out1443;
assign isOpI = out1441;
assign pc_pcPlus4 = out1429;
assign xt0_o = out1431;
assign xt1_o = out1469|out1442;
assign isiz_2 = out1428|out1425;
assign xt2_o = out1473|out1444;
assign xt3_o = out1475;
endmodule
